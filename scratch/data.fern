[
  int: 42
  float: 3.14
  string: "hello world"
  bool: true [ "some" key: "dict" ]
  none: none

  # semi-colon is optimal as a delimiter
  "some value" ;

  # keys are always strings and don't require quotes
  # values are be int, float, string (requires quotes), bool, none_t, or Fern
  do: "for"

  array: [ 2 3 4 5 6 ]
  array2: [ 2 3 ; 4 5 ; 6 ]
  # maximum number of semi-colons
  array3: [ 2 ; 3 ; 4 ; 5 ; 6 ; ]
  array4: [ 2 ; 3 ; 4 ; 5 ; 6 ]
  array5: [ 2 3 4 five: 5 6 ]
  object: [
    "labels may or may not have quotes, but require quotes if they contain spaces": none
    cat: 2
    "dog": 3
    "fish": 4
      "
      multi-line string
      with two lines and no leading spaces
      "
  ]

  # Some nested object
  my_object: [
    elem1: 2.24
    elem2: [
      nested_elem_1: 3.14
    ]
  ]

  "/this/is/a/string/without/a/label"

  "this/is/a/label": "and this is a string"

  number: 3.14
  boolean: true
  empty: none

  array: [ 2 3 4 5 6 ]
  array_semicolon_1: [ 2; 3; 4; 5; 6; ]
  array_semicolon_2: [ 2 ; 3 ; 4 ; 5 ; 6 ;]

  # objects still have an order to them
  object: [
    "cat": 2
    "dog": 3
    "fish": 4
  ]

  # Some nested object with partially labelled items
  my_object: [
    elem1: 2.24
    [
      nested_elem_1: 3.14
    ]
    12.34
    elem4: [ "abc" "def" ]
  ]
]
