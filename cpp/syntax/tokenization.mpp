#include "tokenization.hpp"

#include "canopy/main.hpp"
#include "canopy/stream.hpp"
#include "syntax_ward.hpp"

#include <fmt/format.h>

namespace silva {
  expected_t<void> tokenization_main(const span_t<string_view_t> cmdline_args)
  {
    const index_t m = cmdline_args.size();
    SILVA_EXPECT(2 == m, MINOR, "Usage: ... <file>");

    constexpr expected_traits_t expected_traits{.materialize_fwd = true};
    syntax_ward_t sw;
    stream_stdout_t _stdout;
    const auto tokenization = SILVA_EXPECT_FWD(tokenize_load(sw.ptr(), cmdline_args[1]));
    to_string(&_stdout, *tokenization);
    return {};
  }
}
SILVA_MAIN(silva::tokenization_main);
