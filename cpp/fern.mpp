#include "fern.hpp"

#include "canopy/filesystem.hpp"
#include "canopy/main.hpp"
#include "syntax/seed_engine.hpp"

using namespace silva;

expected_t<void>
silva_main()
{
  const auto arg_filename = SILVA_EXPECT_FWD(env_context_get("filename"));
  const auto arg_process  = SILVA_EXPECT_FWD(env_context_get("process"));
  const bool arg_root =
      SILVA_EXPECT_FWD_IF(env_context_get_as<bool>("root-based"), MAJOR).value_or(false);

  token_context_t tc;
  auto tt = SILVA_EXPECT_FWD(tokenize_load(tc.ptr(), arg_filename));
  unique_ptr_t<parse_tree_t> pt;
  auto fpr = fern_seed_engine(tc.ptr());
  if (arg_root) {
    pt = SILVA_EXPECT_FWD(fpr->apply(std::move(tt), tc.name_id_of("Fern")));
  }
  else {
    pt = SILVA_EXPECT_FWD(fern_parse(std::move(tt)));
  }

  if (arg_process.empty()) {
    ;
  }
  else if (arg_process.starts_with("fern_t/")) {
    const auto rest   = arg_process.substr(7);
    const fern_t fern = SILVA_EXPECT_FWD(fern_create(pt.get()));
    if (rest == "string") {
      fmt::print("{}\n", fern.to_string());
    }
    else if (rest == "graphviz") {
      fmt::print("{}\n", fern.to_graphviz());
    }
    else if (rest == "graphviz_show") {
      graphviz_show_sync(fern.to_graphviz());
    }
    else {
      SILVA_EXPECT(false, MAJOR, "process={} is invalid", arg_process);
    }
  }
  else if (arg_process.starts_with("direct/")) {
    const auto rest = arg_process.substr(7);
    if (rest == "string") {
      fmt::print("{}\n", SILVA_EXPECT_FWD(fern_to_string(pt.get())));
    }
    else if (rest == "graphviz") {
      fmt::print("{}\n", SILVA_EXPECT_FWD(fern_to_graphviz(pt.get())));
    }
    else if (rest == "graphviz_show") {
      graphviz_show_sync(SILVA_EXPECT_FWD(fern_to_graphviz(pt.get())));
    }
    else {
      SILVA_EXPECT(false, MAJOR, "process={} is invalid", arg_process);
    }
  }
  else if (arg_process.starts_with("parse_tree/")) {
    const auto rest = arg_process.substr(11);
    if (rest == "string") {
      fmt::print("{}\n", SILVA_EXPECT_FWD(pt->span().to_string()));
    }
    else if (rest == "graphviz") {
      fmt::print("{}\n", SILVA_EXPECT_FWD(pt->span().to_graphviz()));
    }
    else if (rest == "graphviz_show") {
      graphviz_show_sync(SILVA_EXPECT_FWD(pt->span().to_graphviz()));
    }
    else {
      SILVA_EXPECT(false, MAJOR, "process={} is invalid", arg_process);
    }
  }
  else {
    SILVA_EXPECT(false, MAJOR, "process={} is invalid", arg_process);
  }

  return {};
}
SILVA_MAIN(silva_main);
