- Precedence = ( Expr ";" )* "end"

- Expr,0 = "A" A_Expr
- Expr,1 = "B" B_Expr

- A_Expr = A_Add
- A_Add = A_Mult ("+" A_Add)*
- A_Mult = A_Primary ("*" A_Mult)*
- A_Primary,0 = "(" A_Expr ")"
- A_Primary,1 = number

- B_Expr =% B_Primary [
    binary_ltr  "." "|"
    prefix      "-" "not" "*"
    binary_ltr  "*" "/"
    binary_ltr  "+" "-"
    binary_ltr  "=="
    binary_ltr  "and"
    binary_ltr  "or"
    binary_rtl  "=:"
    postfix     "!"
  ]
- B_Primary,0 = "(" B_Expr ")"
- B_Primary,1 =~ number string
